/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
       if(root==null) return true;
        return TrueOrFasle(root.left,root.right);

    }
    public boolean TrueOrFasle(TreeNode Left,TreeNode Right)
    {
       if(Left==null&&Right==null)
            return true;
       else if(Left==null||Right==null)
            return false;
       if(Left.val!=Right.val) 
            return false;
       return  TrueOrFasle(Left.left,Right.right)&&TrueOrFasle(Left.right,Right.left);
    }
}

执行用时 :1 ms, 在所有 java 提交中击败了69.89%的用户
内存消耗 :39.7 MB, 在所有 java 提交中击败了31.65%的用户

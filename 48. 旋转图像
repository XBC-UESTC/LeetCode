class Solution {
    public void rotate(int[][] matrix) {
        
        if (matrix == null || matrix.length == 0) return;
        int len = matrix[0].length-1;

        int colF = len;

        for (int r = 0; r < colF ; r++) {
            for (int c = r; c < colF; c++) {
                int x1 = r;
                int y1 = c;

                int x2 = c;
                int y2 =len - r;

                int x3 = len - r;
                int y3 = len - c;

                int x4 = len - c;
                int y4 = r;
                swap(matrix, x1, y1,  x2, y2, x3, y3,x4, y4);
            }
            colF--;
        }
    }
    public void swap(int[][] matrix, int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4) {
        int temp = matrix[x1][y1];
        matrix[x1][y1] = matrix[x4][y4];
        matrix[x4][y4] = matrix[x3][y3];
        matrix[x3][y3] = matrix[x2][y2];
        matrix[x2][y2] = temp;
    }
}

执行用时 :0 ms, 在所有 java 提交中击败了100.00%的用户
内存消耗 :36.3 MB, 在所有 java 提交中击败了58.92%的用户

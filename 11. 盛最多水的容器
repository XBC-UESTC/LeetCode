class Solution {
    public int maxArea(int[] height) {
        int area = 0;
        int left = 0;
        int right = height.length-1;
        while(left<right)
        {
            area = Math.max(area,Math.min(height[left],height[right])*(right-left));
            if(height[left]>height[right]) right--;
            else left++;
        }
        return area;
    }
}

执行用时 :4 ms, 在所有 java 提交中击败了83.75%的用户
内存消耗 :38.9 MB, 在所有 java 提交中击败了94.23%的用户

给定 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。
找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。
示例:
输入: [1,8,6,2,5,4,8,3,7]
输出: 49
来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/container-with-most-water
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

